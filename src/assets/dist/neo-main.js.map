{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n    this._uid = settings.uid\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name },\n\n  /**\n   * @public\n   * @since 3.7.0\n   * @returns this tab's UID\n   */\n  getUid () { return this._uid }\n})\n","import Garnish from 'garnish'\nimport Craft from 'craft'\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  field: null,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: null,\n  tabNames: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._field = settings.field\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabNames = settings.tabNames\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._html = settings.tabs?.html ?? ''\n    this._js = settings.tabs?.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs?.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabNames () { return this._tabNames },\n\n  getTabs () { return this._tabs !== null ? Array.from(this._tabs) : null },\n  async loadTabs () {\n    if (this._tabs !== null) {\n      return\n    }\n\n    NS.enter(this._field.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      blocks: [{\n        collapsed: false,\n        enabled: true,\n        level: 1,\n        ownerId: this._field?.getOwnerId(),\n        type: this._id\n      }]\n    }\n    NS.leave()\n\n    const renderedBlocks = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n    if (renderedBlocks.data.success) {\n      if (renderedBlocks.data.headHtml) {\n        Craft.appendHeadHtml(renderedBlocks.data.headHtml)\n      }\n\n      if (renderedBlocks.data.bodyHtml) {\n        Craft.appendBodyHtml(renderedBlocks.data.bodyHtml)\n      }\n\n      const tabs = renderedBlocks.data.blocks[0].tabs\n      this._tabs = tabs.tabNames?.map(\n        tab => new Tab({\n          name: tab,\n          uid: tabs.tabUids[tab]\n        })\n      ) ?? []\n      this._html = tabs.html\n      this._js = tabs.js\n    }\n  },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  tabs: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n  _tabs: null,\n  _html: null,\n  _js: null,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._html = settings.tabs?.html ?? null\n    this._js = settings.tabs?.js ?? null\n    this._id = settings.id\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : this._field.$container.find(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n    this.resetButtons(settings.buttons)\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tabName of this._blockType.getTabNames()) {\n        const selector = `[data-neo-b-info=\"${tabName}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const tabs = this._tabs ?? type.getTabs()\n    const hasTabs = tabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">`)\n\n    if (isNaN(parseInt(this._id))) {\n      elementHtml.push(`\n        <input type=\"hidden\" name=\"${baseInputName}[collapsed]\" value=\"${!this._expanded ? '1' : ''}\" data-neo-b=\"${this._id}.input.collapsed\">`)\n    }\n\n    elementHtml.push(`\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')} aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (tabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < tabs.length; i++) {\n        const tab = tabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${tabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < tabs.length; i++) {\n        const tab = tabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${this.getHtml()}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    this.$foot = $(this.getJs()).filter(_resourceFilter)\n    Garnish.$bod.append(this.$foot)\n\n    if (callInitUiElements) {\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getHtml () {\n    return this._html !== null\n      ? this._html.replace(/__NEOBLOCK__/g, this._id)\n      : this._blockType.getHtml(this._id)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getJs () {\n    return this._js !== null\n      ? this._js.replace(/__NEOBLOCK__/g, this._id)\n      : this._blockType.getJs(this._id)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    // Finally, only allow block types that are allowed to be created by the current user\n    // This is safe since allowedBlockTypes is only used to check if paste/add block actions should be disabled\n    allowedBlockTypes = allowedBlockTypes.filter((bt) => bt.isCreatableByUser())\n\n    this.updateMenuStates(\n      this._field.getName(),\n      blocks,\n      this._field.getMaxBlocks(),\n      true,\n      allowedBlockTypes,\n      this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    )\n  },\n\n  // Deprecated in 3.0.4; use `updateActionsMenu()` instead\n  updateMenuStates (field, blocks = [], maxBlocks = 0, additionalCheck = null, allowedBlockTypes = false, maxTopBlocks = 0) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n    const noAllowedBlockTypes = !allowedBlockTypes || allowedBlockTypes.length === 0\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const addDisabled = allDisabled || noAllowedBlockTypes\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n\n    // Paste/add actions should be hidden if there is no chance of them being enabled later\n    if (noAllowedBlockTypes) {\n      this.$menuContainer.find('[data-action=\"add\"]').parent().toggleClass('hidden', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').parent().toggleClass('hidden', pasteDisabled)\n    } else {\n      this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n    }\n\n    // If there are no visible items in the second list, hide the separator as well\n    this.$menuContainer.children('hr').toggleClass(\n      'hidden',\n      this.$menuContainer.children('ul:last-child').children('li:not(.hidden)').length === 0\n    )\n  },\n\n  resetButtons (settings) {\n    this.$blocksContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$childrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n\n    if (typeof settings !== 'undefined' && settings !== null) {\n      this._buttons = settings\n    } else {\n      this._buttons = new this._field.ButtonClass({\n        $ownerContainer: this.$container,\n        field: this._field,\n        items: this._blockType.getChildBlockItems(this._field.getItems()),\n        maxBlocks: this._field.getMaxBlocks()\n      })\n    }\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n\n      if (this._initialised) {\n        this._buttons.initUi()\n      }\n    }\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n},\n{\n  _totalNewBlocks: 0,\n\n  /**\n   * @deprecated in 3.9.0\n   */\n  getNewId () {\n    return `new${this._totalNewBlocks++}`\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblockgrid_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblocklist_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n  _newBlockId: 0,\n  _newBlockCount: 0,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._minBlocks = settings.minBlocks\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    const animate = !Garnish.prefersReducedMotion()\n    this._$spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : Craft.t('neo', 'Loading')}</div>`)\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this.ButtonClass = ButtonsGrid\n        break\n      case 'list':\n        this.ButtonClass = ButtonsList\n        break\n      default:\n        this.ButtonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(Object.assign({ field: this }, btInfo))\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this.ButtonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = blockType\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Create any required top level blocks, if this field has only one top level block type\n    if (this._minBlocks > 0) {\n      const missingBlockCount = this._minBlocks - this._blocks.length\n      const topLevelBlockTypes = this.getBlockTypes(true)\n\n      if (topLevelBlockTypes.length === 1 && missingBlockCount > 0) {\n        for (let i = this._blocks.length; i < this._minBlocks; i++) {\n          this['@newBlock']({\n            blockType: topLevelBlockTypes[0],\n            createChildBlocks: false,\n            index: i,\n            level: 1\n          })\n        }\n      }\n    }\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null, createChildBlocks = true) {\n    this._newBlockCount++\n    this.$form.data('elementEditor')?.pause()\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Construct the block's visible layout elements, since they might not be the default visible\n    // layout elements for the block type, e.g. if pasting a block\n    const visibleLayoutElements = {}\n    block.$contentContainer.children('[data-layout-tab]').each((_, layoutTab) => {\n      const $layoutTab = $(layoutTab)\n      const tabUid = $layoutTab.attr('data-layout-tab')\n      visibleLayoutElements[tabUid] = []\n      $layoutTab.children('[data-layout-element]').each((_, layoutElement) => {\n        visibleLayoutElements[tabUid].push($(layoutElement).attr('data-layout-element'))\n      })\n    })\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Create any required child blocks, if this block has only one child block type\n    const createChildBlocksIfAllowed = () => {\n      if (createChildBlocks) {\n        const blockType = block.getBlockType()\n        const minChildBlocks = blockType.getMinChildBlocks()\n\n        if (minChildBlocks > 0) {\n          let childBlockTypes = blockType.getChildBlocks()\n\n          if (childBlockTypes === '*') {\n            childBlockTypes = this.getBlockTypes()\n          }\n\n          if (childBlockTypes.length === 1) {\n            const childBlockType = this.getBlockTypeByHandle(childBlockTypes[0])\n\n            for (let i = 0; i < minChildBlocks; i++) {\n              this['@newBlock']({\n                blockType: childBlockType,\n                createChildBlocks: false,\n                index: index + i + 1,\n                level: level + 1\n              })\n            }\n          }\n        }\n      }\n\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => {\n          Garnish.scrollContainerToElement(block.$container)\n          createChildBlocksIfAllowed()\n        }))\n    } else {\n      createChildBlocksIfAllowed()\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  /**\n   * @since 3.9.2\n   */\n  getNamespace () {\n    return Array.from(this._templateNs)\n  },\n\n  /**\n   * @since 3.9.3\n   */\n  getOwnerId () {\n    return this._ownerId\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(() => {\n      const elementEditor = this.$form.data('elementEditor')\n      elementEditor?.on('update', () => {\n        // If the draft's being resaved, wait until we get the next event\n        if (elementEditor.submittingForm) {\n          return\n        }\n\n        // Don't update visible elements if the draft save was the result of creating a new block\n        if (this._newBlockCount > 0) {\n          this._newBlockCount--\n          return\n        }\n\n        elementEditor.pause()\n        const siteId = elementEditor.settings.siteId\n        const data = {\n          blocks: {},\n          sortOrder: [],\n          fieldId: this._id,\n          ownerCanonicalId: this._ownerId,\n          ownerDraftId: elementEditor.settings.draftId,\n          isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n          siteId\n        }\n        const originalBlockIds = {}\n        this._blocks.forEach((block) => {\n          const selectedTabId = block.$contentContainer\n            .children('[data-layout-tab]:not(.hidden)')\n            .data('layout-tab')\n          data.blocks[block.getDuplicatedBlockId()] = {\n            selectedTab: selectedTabId ?? null,\n            visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n          }\n          data.sortOrder.push(block.getDuplicatedBlockId())\n          originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n        })\n\n        Craft.queue.push(() => new Promise((resolve, reject) => {\n          Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n            .then((response) => {\n              for (const blockId in response.data.blocks) {\n                const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n                this._updateVisibleElements(\n                  block,\n                  response.data.blocks[blockId],\n                  data.blocks[block.getDuplicatedBlockId()].selectedTabId\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n            .finally(() => elementEditor.resume())\n        }))\n      })\n    }, 200)\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const html = elementInfo.html.replaceAll('__NEOBLOCK__', block.getId())\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            if ($newElement.hasClass('ni_child-blocks-ui-element')) {\n              block.resetButtons()\n            }\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n\n      if (changedElements) {\n        this._updateButtons()\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml.replaceAll('__NEOBLOCK__', block.getId()))\n    Craft.appendBodyHtml(blockData.bodyHtml.replaceAll('__NEOBLOCK__', block.getId()))\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _addSpinnerAfter (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.after(this._$spinner)\n    } else {\n      this.$blocksContainer.prepend(this._$spinner)\n    }\n  },\n\n  _addSpinnerBefore (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.before(this._$spinner)\n    } else {\n      this.$blocksContainer.append(this._$spinner)\n    }\n  },\n\n  _animateSpinnerThen (callback) {\n    if (!Garnish.prefersReducedMotion()) {\n      this._$spinner\n        .css({\n          opacity: 0,\n          marginBottom: -(this._$spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => callback())\n    } else {\n      callback()\n    }\n  },\n\n  _removeSpinner () {\n    this._$spinner.remove()\n  },\n\n  _getNewBlockId () {\n    while (this.$blocksContainer.find(`[data-neo-b-id=\"new${this._newBlockId}\"]`).length > 0) {\n      this._newBlockId++\n    }\n\n    return `new${this._newBlockId++}`\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n    this._addSpinnerAfter(block)\n    this._animateSpinnerThen(() => Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = this._getNewBlockId()\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: this.getBlockTypeById(renderedBlock.type),\n            tabs: renderedBlock.tabs,\n            id: newId,\n            level: renderedBlock.level | 0,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        let newIndex = this._getNextBlockIndex(block)\n\n        for (const newBlock of newBlocks) {\n          this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n        }\n\n        if (!Garnish.prefersReducedMotion()) {\n          const firstBlock = newBlocks[0]\n\n          firstBlock.$container\n            .css({\n              opacity: 0,\n              marginBottom: this._$spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n        }\n\n        this._removeSpinner()\n        this.$form.data('elementEditor')?.resume()\n      }\n    }))\n  },\n\n  async '@newBlock' (e) {\n    const createTheBlock = () => {\n      const blockId = this._getNewBlockId()\n      const block = new Block({\n        namespace: [...this._templateNs, blockId],\n        field: this,\n        blockType: e.blockType,\n        id: blockId,\n        showButtons: !this.atMaxLevels(e.level),\n        showBlockTypeHandle: this._showBlockTypeHandles\n      }, true)\n\n      this._removeSpinner()\n      this.addBlock(block, e.index, e.level, e.createChildBlocks, e.createChildBlocks)\n    }\n\n    if (e.blockType.getTabs() !== null) {\n      createTheBlock()\n      return\n    }\n\n    const elementEditor = this.$form.data('elementEditor')\n\n    try {\n      elementEditor?.pause()\n      const level = e.level ?? 1\n      let siblingBlock\n      let addAfter = true\n\n      for (let i = typeof e.index !== 'undefined' ? e.index - 1 : this._blocks.length - 1; i >= 0; i--) {\n        // Look for the previous block at the same level as the new block, to add the spinner after\n        if (this._blocks[i].getLevel() === level) {\n          siblingBlock = this._blocks[i]\n          break\n        }\n\n        // If we've gone to a lower level, any future block we find at the same level won't be a\n        // sibling of the new block, so we need to add the spinner before the last block we checked\n        if (this._blocks[i].getLevel() < level) {\n          siblingBlock = this._blocks[i + 1]\n          addAfter = false\n        }\n      }\n\n      if (addAfter) {\n        this._addSpinnerAfter(siblingBlock)\n      } else {\n        this._addSpinnerBefore(siblingBlock)\n      }\n\n      this._animateSpinnerThen(async () => {\n        await e.blockType.loadTabs()\n        createTheBlock()\n      })\n    } catch (error) {\n      this._removeSpinner()\n      Craft.cp.displayError(error)\n    } finally {\n      elementEditor?.resume()\n    }\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this.ButtonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","arguments","length","undefined","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","_uid","uid","getErrors","getName","getUid","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","tabNames","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_settings$tabs$html","_settings$tabs","_settings$tabs$js","_settings$tabs2","_settings$tabs$visibl","_settings$tabs3","_settings$tabs$tabNam","_settings$tabs$tabNam2","_id","_field","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabNames","_tabs","map","tab","Tab","tabUids","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabNames","getTabs","async","_this$_field","NS","namespace","collapsed","level","ownerId","getOwnerId","renderedBlocks","success","_tabs$tabNames$map","_tabs$tabNames","headHtml","bodyHtml","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","_objectSpread","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","index","$parent","eq","buttons","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","concat","$neo","$bodyContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","resetButtons","hasErrors","tabName","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","_this$_tabs","showHandle","baseInputName","baseInputId","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","isNaN","parseInt","tabUid","$elementHtml","class","insertAfter","initUi","_this$_buttons","callInitUiElements","$foot","initTabs","_settingsMenu","on","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","_buttons","updateResponsiveness","e","parents","_","cbuiElement","$tabContent","tabIndex","add","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","trigger","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","remove","clearInterval","_detectChangeInterval","disconnect","getDuplicatedBlockId","_this$$form$data$dupl","_this$$form$data","duplicatedElements","isTopLevel","val","setModified","isModified","getSiteId","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","_blocks","blockParent","currentBlock","_blocks2","currentLevel","getSiblings","_blocks3","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","_this$$form$data2","sentBlockId","isProvisionalDraft","siteId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","$buttonsContainer","$childrenWarningsContainer","selectTab","attr","_this$_topbarLeftWidt","_this$_topbarRightWid","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","_this$getParent","_parentBlockType$getC","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","updateMenuStates","getMaxTopBlocks","additionalCheck","noAllowedBlockTypes","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","addDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","_pasteData$blocks$len","_pasteData$blocks","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","$collapsedChildrenContainer","ButtonClass","$ownerContainer","getItems","namespaceId","namespacedId","toggle","_toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","_this$$form$data3","_this$$form$data4","pause","resume","currentTarget","_totalNewBlocks","getNewId","blockTypes","groups","NewBlockMenu","constructor","_defineProperty","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","_this$$ownerContainer","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","extend","ButtonsGrid","_ref","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","_visibleLayoutElements","_newBlockId","_newBlockCount","_groups","gInfo","Group","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","_$spinner","newBlockMenuStyle","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","missingBlockCount","topLevelBlockTypes","createChildBlocks","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_this$_tempButtons","_block$getButtons","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","layoutTab","$layoutTab","layoutElement","createChildBlocksIfAllowed","childBlockTypes","childBlockType","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","_this$$form$data5","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","_this$$form$data6","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_this$_tempButtons2","_tempButtonsBlock","_block$getButtons2","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","submittingForm","fieldId","ownerCanonicalId","ownerDraftId","originalBlockIds","_this$_visibleLayoutE","selectedTabId","selectedTab","response","_updateVisibleElements","finally","blockData","_blockData$tabs$match","_blockData$tabs","_blockData$tabs$match2","$allTabContainers","changedElements","missingElements","tabInfo","appendTo","j","elements","elementInfo","replaceAll","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","$tabsHtml","empty","initialDeltaValues","_addSpinnerAfter","_addSpinnerBefore","_animateSpinnerThen","_removeSpinner","_getNewBlockId","_duplicate","_this$$form$data7","_this$$form$data8","newBlocks","renderedBlock","newId","newBlock","newIndex","firstBlock","createTheBlock","_e$level","siblingBlock","addAfter","loadTabs","error","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","n","_block$getLevel","baseLevel","blockIndex","subBlocks","getBlockData","context","_window","inputs","Neo","Input","createInput"],"sourceRoot":""}